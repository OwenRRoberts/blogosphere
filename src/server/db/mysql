-- CREATE SCHEMA blogosphere;
-- USE blogosphere;

CREATE TABLE authors(
	id INT AUTO_INCREMENT,
	name VARCHAR(60) NOT NULL,
    email VARCHAR(60) NOT NULL UNIQUE,
	_created TIMESTAMP DEFAULT NOW(),
    PRIMARY KEY (id)
);

CREATE TABLE blogs (
	id INT AUTO_INCREMENT,
	title VARCHAR(75) NOT NULL,
    content TEXT NOT NULL,
    authorid INT NOT NULL,
	_created TIMESTAMP DEFAULT NOW(),
    PRIMARY KEY (id),
    FOREIGN KEY (authorid) REFERENCES authors (id)
);

CREATE TABLE tags (
id INT AUTO_INCREMENT,
name VARCHAR(25) NOT NULL UNIQUE,
_created TIMESTAMP DEFAULT NOW(),
PRIMARY KEY (id)
);

CREATE TABLE blogtags(
	blogid INT NOT NULL,
    tagid INT NOT NULL,
    PRIMARY KEY (blogid, tagid),
    FOREIGN KEY (blogid) REFERENCES blogs (id),
    FOREIGN KEY (tagid) REFERENCES tags (id)
);

INSERT INTO authors(email, name) VALUE('test@test.com', 'Test Author');
INSERT INTO blogs (title, content, authorid) VALUE('Test Blog Title', 'Test Blog Content', 1);
INSERT INTO tags (name) VALUE ('Test Tag');
INSERT INTO blogtags (blogid, tagid) VALUE(1, 1);


SELECT * FROM authors;
SELECT * FROM blogs;
SELECT * FROM tags;
SELECT * FROM blogtags;
call spBlogTags(1);


DELIMITER $$
CREATE PROCEDURE spBlogTags(blog_id INT)
BEGIN
	SELECT tags.id, tags.name  FROM blogtags 
	JOIN tags ON tags.id = blogtags.tagid 
	WHERE blogid = blog.id;
END $$
DELIMITER ;

SELECT blogs.*, authors.name FROM blogs JOIN authors ON authors.id - blogs.authorid;